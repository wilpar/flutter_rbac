rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // anyone can read branches
    match /branches/{b} {
      allow read: if true;
      allow write: if request.auth.token.role == 'admin';
    }
    match /branches/{b}/cuisines/{c} {
      allow read: if true;
      allow write: if request.auth.token.role == 'admin';
    }
    match /branches/{b}/extra/detail {
      allow read: if true;
      allow write: if request.auth.token.role == 'admin';
    }

    // anyone can read cuisines
    match /cuisines/{c} {
      allow read: if true;
      allow write: if request.auth.token.role == 'admin';
    }
    
    // anyone can read markets
    match /markets/{market} {
      allow read: if true;
      allow write: if request.auth.token.role == 'admin';
    }

    // orders. Anyone can create.  Need to allow restaurant
    match /orders/{o} {
      allow create: if request.auth != null;
      allow read: if request.auth.uid == resource.data.purchaserUID || request.auth.uid in resource.data.managers;
      allow update: if request.auth.uid == resource.data.purchaserUID && resource.data.status in ['reserved', 'requested'];
      allow update: if request.auth.uid in resource.data.managers && resource.data.status in ['active', 'reserved'];
      allow delete: if request.auth.uid == resource.data.purchaserUID && resource.data.status in ['reserved', 'requested'];
      
      allow write: if request.auth.token.role == 'admin';
    }

    // read your own profile
    match /profiles/{userId} {
      allow read: if request.auth.uid == userId || request.auth.token.role == 'admin';
      allow write: if request.auth.uid == userId;
    }

  }
}